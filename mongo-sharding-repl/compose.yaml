services:
  configSrv:
    image: mongo:latest
    container_name: configSrv
    restart: always
    ports:
      - "27017:27017"
    networks:
      app-network:
        ipv4_address: 173.17.0.10
    volumes:
      - config-data:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ]

  shard_1_1:
    image: mongo:latest
    container_name: shard_1_1
    restart: always
    ports:
      - "27018:27018"
    networks:
      app-network:
        ipv4_address: 173.17.0.9
    volumes:
      - shard_1_1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard_1",
        "--bind_ip_all",
        "--port",
        "27018"
      ]

  shard_1_2:
    image: mongo:latest
    container_name: shard_1_2
    restart: always
    ports:
      - "27118:27118"
    networks:
      app-network:
        ipv4_address: 173.17.1.9
    volumes:
      - shard_1_2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard_1",
        "--bind_ip_all",
        "--port",
        "27118"
      ]

  shard_1_3:
    image: mongo:latest
    container_name: shard_1_3
    restart: always
    ports:
      - "27218:27218"
    networks:
      app-network:
        ipv4_address: 173.17.2.9
    volumes:
      - shard_1_3-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard_1",
        "--bind_ip_all",
        "--port",
        "27218"
      ]

  shard_2_1:
    image: mongo:latest
    container_name: shard_2_1
    restart: always
    ports:
      - "27019:27019"
    networks:
      app-network:
        ipv4_address: 173.17.1.8
    volumes:
      - shard_2_1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard_2",
        "--bind_ip_all",
        "--port",
        "27019"
      ]

  shard_2_2:
    image: mongo:latest
    container_name: shard_2_2
    restart: always
    ports:
      - "27119:27119"
    networks:
      app-network:
        ipv4_address: 173.17.2.8
    volumes:
      - shard_2_2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard_2",
        "--bind_ip_all",
        "--port",
        "27119"
      ]

  shard_2_3:
    image: mongo:latest
    container_name: shard_2_3
    restart: always
    ports:
      - "27219:27219"
    networks:
      app-network:
        ipv4_address: 173.17.3.8
    volumes:
      - shard_2_3-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard_2",
        "--bind_ip_all",
        "--port",
        "27219"
      ]

  mongos_router:
    image: mongo:latest
    container_name: mongos_router
    restart: always
    ports:
      - "27020:27020"
    networks:
      app-network:
        ipv4_address: 173.17.0.7
    command:
      [
        "mongos",
        "--configdb",
        "config_server/configSrv:27017",
        "--bind_ip_all",
        "--port",
        "27020"
      ]

  pymongo_api:
    container_name: pymongo_api
    build:
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - mongos_router
      - shard_2_1
      - shard_2_2
      - shard_2_3
      - shard_1_1
      - shard_1_2
      - shard_1_3
      - configSrv
    ports:
      - 8080:8080
    networks:
      app-network:
        ipv4_address: 173.17.0.6
    environment:
      MONGODB_URL: "mongodb://mongos_router:27020"
      MONGODB_DATABASE_NAME: "somedb"

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/16

volumes:
  config-data:
  shard_1_1-data:
  shard_1_2-data:
  shard_1_3-data:
  shard_2_1-data:
  shard_2_2-data:
  shard_2_3-data:
